<?xml version="1.0"?>
<launch>

    <!--Outdoor WOrld-->
    <arg name="world_name" default="$(find cpr_orchard_gazebo)/world/actually_empty_world.world"/>

    <!-- XACRO file -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find gps_waypoint)/urdf/cali_urdf_completed_v3.xacro'" />
    <param name="orchard_geom" command="$(find xacro)/xacro --inorder '$(find cpr_orchard_gazebo)/urdf/orchard_geometry.urdf.xacro'" />
    <!-- send fake joint values -->
    <!-- <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" >
    </node> -->

    <!-- Combine joint values -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn= "false" output="screen" />

    <arg name="x" default="0.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="0.1"/>
    <arg name="roll" default="0"/>
	  <arg name="pitch" default="0"/>
	  <arg name="yaw" default="0"/>


    <arg name="world_x" default="0.0"/>
    <arg name="world_y" default="0.0"/>
    <arg name="world_z" default="0.0"/>
    <arg name="world_yaw" default="0.0"/>


    <!-- Spawn model -->
    <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" output="screen"
          args="-urdf -param robot_description -model rover_autonav -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>
   
    <!-- Spawn map model -->
    <node name="orchard_gazebo_spawner" pkg="gazebo_ros" type="spawn_model"
      args="-urdf -model orchard_geometry -param orchard_geom -x $(arg world_x) -y $(arg world_y) -z $(arg world_z) -Y $(arg world_yaw)" />
   
    <!-- JOINT STATE CONTROLLER -->
    <rosparam file="$(find manipulation)/config/joint_state_controller.yaml" command="load"/>

    <!-- ARM CONTROLLER -->
    <rosparam file="$(find manipulation)/config/arm_controller_scorbot.yaml" command="load"/>

    <!--GRIPPER CONTROLLER-->
    <rosparam file="$(find manipulation)/config/gripper_controller.yaml" command="load"/>
    <param name="gripper_controller/joint" value="scorbot_pad1_joint"/>

    <!-- Launch PIDs for Arm and Gripper Controller-->
    <!-- <rosparam file="$(find manipulation)/config/arm_pids.yaml" command="load" /> -->
    <rosparam file="$(find manipulation)/config/gazebo_controller.yaml" command="load" />

    <!-- Controller Manager-->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" output="screen" 
    args="joint_state_controller scaled_pos_joint_traj_controller gripper_controller"/>

    <!-- Trajectory controller GUI to control arm joints -->
    <node name="arm_control_gui" pkg="rqt_joint_trajectory_controller" type="rqt_joint_trajectory_controller" respawn="false" output="screen"/>

    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="world_name" value="$(arg world_name)"/>
            <arg name="debug" value="false" />
            <arg name="paused" value="false"/>
            <arg name="use_sim_time" value="true"/>
            <arg name="headless" value="false"/>
            <arg name="verbose" value="true"/>
    </include>
    <!-- Rviz Config -->
    <node name="rviz_perception" pkg="rviz" type="rviz" args="-d $(find gps_waypoint)/rviz_config/cali.rviz" />

</launch>